# Generated by Django 2.1.7 on 2019-03-25 12:35

import assets.models.utils
import common.db.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('assets', '0026_auto_20190325_2035'),
        ('xpack', '0005_auto_20190221_1902'),
    ]

    operations = [
        migrations.CreateModel(
            name='ChangeAuthPlan',
            fields=[
                ('org_id', models.CharField(blank=True, db_index=True, default='', max_length=36, verbose_name='Organization')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Name')),
                ('username', models.CharField(max_length=32, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z_@\\-\\.]*$', 'Special char not allowed')], verbose_name='Asset username')),
                ('is_periodic', models.BooleanField(default=True)),
                ('interval', models.IntegerField(blank=True, default=24, null=True, validators=[django.core.validators.MaxValueValidator(8760), django.core.validators.MinValueValidator(1)], verbose_name='Cycle perform')),
                ('crontab', models.CharField(blank=True, max_length=128, null=True, verbose_name='Regularly perform')),
                ('password_strategy', models.CharField(choices=[('custom', 'Custom password'), ('random_one', 'All assets use the same random password'), ('random_all', 'All assets use different random password')], default='custom', max_length=128, verbose_name='Password strategy')),
                ('password_rules', common.db.fields.JsonDictCharField(default={'length': 20}, max_length=2048, verbose_name='Password rules')),
                ('password', common.db.fields.EncryptCharField(blank=True, max_length=2048, null=True, verbose_name='Password')),
                ('private_key', common.db.fields.EncryptTextField(blank=True, max_length=4096, null=True, validators=[assets.models.utils.private_key_validator], verbose_name='SSH private key')),
                ('public_key', common.db.fields.EncryptTextField(blank=True, max_length=4096, null=True, verbose_name='SSH public key')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('created_by', models.CharField(max_length=128, null=True, verbose_name='Created by')),
                ('assets', models.ManyToManyField(blank=True, related_name='change_auth_plan', to='assets.Asset', verbose_name='Asset')),
                ('nodes', models.ManyToManyField(blank=True, related_name='change_auth_plan', to='assets.Node', verbose_name='Nodes')),
            ],
            options={
                'verbose_name': 'Change auth plan',
            },
        ),
        migrations.CreateModel(
            name='ChangeAuthPlanExecution',
            fields=[
                ('org_id', models.CharField(blank=True, db_index=True, default='', max_length=36, verbose_name='Organization')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('date_start', models.DateTimeField(auto_now_add=True, verbose_name='Date start')),
                ('timedelta', models.FloatField(default=0.0, null=True, verbose_name='Time')),
                ('plan_snapshot', common.db.fields.JsonDictCharField(blank=True, max_length=4096, null=True, verbose_name='Change auth plan snapshot')),
                ('password', common.db.fields.EncryptCharField(blank=True, max_length=2048, null=True, verbose_name='Password')),
                ('public_key', common.db.fields.EncryptTextField(blank=True, max_length=4096, null=True, verbose_name='SSH public key')),
                ('private_key', common.db.fields.EncryptTextField(blank=True, max_length=4096, null=True, validators=[assets.models.utils.private_key_validator], verbose_name='SSH private key')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='xpack.ChangeAuthPlan', verbose_name='Change auth plan')),
            ],
            options={
                'verbose_name': 'Change auth plan execution',
            },
        ),
        migrations.CreateModel(
            name='ChangeAuthPlanExecutionSubtask',
            fields=[
                ('org_id', models.CharField(blank=True, db_index=True, default='', max_length=36, verbose_name='Organization')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=32, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z_@\\-\\.]*$', 'Special char not allowed')], verbose_name='Asset username')),
                ('is_success', models.BooleanField(default=False)),
                ('reason', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Reason')),
                ('date_start', models.DateTimeField(auto_now_add=True, verbose_name='Date start')),
                ('timedelta', models.FloatField(default=0.0, null=True, verbose_name='Time')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.Asset', verbose_name='Asset')),
                ('plan_execution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subtask', to='xpack.ChangeAuthPlanExecution', verbose_name='Change auth plan execution')),
            ],
            options={
                'verbose_name': 'Change auth plan execution subtask',
            },
        ),
        migrations.AlterModelOptions(
            name='license',
            options={'verbose_name': 'License'},
        ),
        migrations.AlterModelOptions(
            name='syncinstancetask',
            options={'verbose_name': 'Sync instance task'},
        ),
        migrations.AlterField(
            model_name='account',
            name='comment',
            field=models.TextField(blank=True, default='', max_length=128, verbose_name='Comment'),
        ),
        migrations.AlterField(
            model_name='account',
            name='created_by',
            field=models.CharField(blank=True, max_length=32, null=True, verbose_name='Created by'),
        ),
        migrations.AlterField(
            model_name='account',
            name='date_created',
            field=models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date created'),
        ),
        migrations.AlterField(
            model_name='account',
            name='name',
            field=models.CharField(max_length=128, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='account',
            name='provider',
            field=models.CharField(choices=[('aliyun', 'Ali Cloud'), ('qcloud', 'Tencent Cloud'), ('aws_china', 'AWS (Китай)'), ('aws_international', 'AWS (Международный)')], default='aliyun', max_length=128, verbose_name='Provider'),
        ),
        migrations.AlterField(
            model_name='account',
            name='validity',
            field=models.BooleanField(choices=[(True, 'Available'), (False, 'Unavailable')], default=False, max_length=2, verbose_name='Validity'),
        ),
        migrations.AlterField(
            model_name='interface',
            name='favicon',
            field=models.ImageField(blank=True, max_length=128, null=True, upload_to='xpack/logo/', verbose_name='Website icon'),
        ),
        migrations.AlterField(
            model_name='interface',
            name='login_image',
            field=models.ImageField(blank=True, max_length=128, null=True, upload_to='xpack/logo/', verbose_name='Image of login page'),
        ),
        migrations.AlterField(
            model_name='interface',
            name='login_title',
            field=models.CharField(blank=True, max_length=1024, null=True, verbose_name='Title of login page'),
        ),
        migrations.AlterField(
            model_name='interface',
            name='logo_index',
            field=models.ImageField(blank=True, max_length=128, null=True, upload_to='xpack/logo/', verbose_name='Logo of management page'),
        ),
        migrations.AlterField(
            model_name='interface',
            name='logo_logout',
            field=models.ImageField(blank=True, max_length=128, null=True, upload_to='xpack/logo/', verbose_name='Logo of logout page'),
        ),
        migrations.AlterField(
            model_name='license',
            name='content',
            field=models.TextField(verbose_name='Content'),
        ),
        migrations.AlterField(
            model_name='syncinstancedetail',
            name='asset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.Asset', verbose_name='Asset'),
        ),
        migrations.AlterField(
            model_name='syncinstancedetail',
            name='date_sync',
            field=models.DateTimeField(auto_now=True, null=True, verbose_name='Date sync'),
        ),
        migrations.AlterField(
            model_name='syncinstancedetail',
            name='instance_id',
            field=models.CharField(blank=True, max_length=128, verbose_name='Instance'),
        ),
        migrations.AlterField(
            model_name='syncinstancedetail',
            name='region',
            field=models.CharField(blank=True, max_length=128, verbose_name='Region'),
        ),
        migrations.AlterField(
            model_name='syncinstancedetail',
            name='status',
            field=models.SmallIntegerField(choices=[(0, 'Failed'), (1, 'Succeed'), (2, 'Exist')], default=1, verbose_name='Status'),
        ),
        migrations.AlterField(
            model_name='syncinstancedetail',
            name='sync_instance_task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='xpack.SyncInstanceTask', verbose_name='Sync task'),
        ),
        migrations.AlterField(
            model_name='syncinstancedetail',
            name='sync_instance_task_history',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='xpack.SyncInstanceTaskHistory', verbose_name='Sync instance task history'),
        ),
        migrations.AlterField(
            model_name='syncinstancetask',
            name='account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='xpack.Account', verbose_name='Account'),
        ),
        migrations.AlterField(
            model_name='syncinstancetask',
            name='admin_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.AdminUser', verbose_name='Admin user'),
        ),
        migrations.AlterField(
            model_name='syncinstancetask',
            name='comment',
            field=models.TextField(blank=True, default='', max_length=2048, verbose_name='Comment'),
        ),
        migrations.AlterField(
            model_name='syncinstancetask',
            name='created_by',
            field=models.CharField(blank=True, max_length=32, null=True, verbose_name='Created by'),
        ),
        migrations.AlterField(
            model_name='syncinstancetask',
            name='date_created',
            field=models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date created'),
        ),
        migrations.AlterField(
            model_name='syncinstancetask',
            name='date_last_sync',
            field=models.DateTimeField(auto_now=True, null=True, verbose_name='Date last sync'),
        ),
        migrations.AlterField(
            model_name='syncinstancetask',
            name='instances',
            field=models.CharField(blank=True, max_length=1024, null=True, verbose_name='Instances'),
        ),
        migrations.AlterField(
            model_name='syncinstancetask',
            name='name',
            field=models.CharField(max_length=128, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='syncinstancetask',
            name='node',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.Node', verbose_name='Node'),
        ),
        migrations.AlterField(
            model_name='syncinstancetask',
            name='regions',
            field=models.CharField(blank=True, max_length=1024, verbose_name='Regions'),
        ),
        migrations.AlterField(
            model_name='syncinstancetaskhistory',
            name='date_sync',
            field=models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date sync'),
        ),
        migrations.AlterField(
            model_name='syncinstancetaskhistory',
            name='reason',
            field=models.CharField(blank=True, default='-', max_length=128, verbose_name='Reason'),
        ),
        migrations.AlterField(
            model_name='syncinstancetaskhistory',
            name='result',
            field=models.TextField(blank=True, default='', verbose_name='Result'),
        ),
        migrations.AlterField(
            model_name='syncinstancetaskhistory',
            name='status',
            field=models.SmallIntegerField(choices=[(0, 'Failed'), (1, 'Succeed'), (2, 'Partial succeed')], default=1, verbose_name='Status'),
        ),
        migrations.AlterField(
            model_name='syncinstancetaskhistory',
            name='sync_instance_task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='xpack.SyncInstanceTask', verbose_name='Sync instance task'),
        ),
    ]
